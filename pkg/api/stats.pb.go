// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: stats.proto

package api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LoadAvg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OneMin       float64 `protobuf:"fixed64,1,opt,name=OneMin,proto3" json:"OneMin,omitempty"`
	FiveMin      float64 `protobuf:"fixed64,2,opt,name=FiveMin,proto3" json:"FiveMin,omitempty"`
	FifteenMin   float64 `protobuf:"fixed64,3,opt,name=FifteenMin,proto3" json:"FifteenMin,omitempty"`
	ProcsRunning int64   `protobuf:"varint,4,opt,name=ProcsRunning,proto3" json:"ProcsRunning,omitempty"`
	TotalProcs   int64   `protobuf:"varint,5,opt,name=TotalProcs,proto3" json:"TotalProcs,omitempty"`
}

func (x *LoadAvg) Reset() {
	*x = LoadAvg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadAvg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadAvg) ProtoMessage() {}

func (x *LoadAvg) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadAvg.ProtoReflect.Descriptor instead.
func (*LoadAvg) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{0}
}

func (x *LoadAvg) GetOneMin() float64 {
	if x != nil {
		return x.OneMin
	}
	return 0
}

func (x *LoadAvg) GetFiveMin() float64 {
	if x != nil {
		return x.FiveMin
	}
	return 0
}

func (x *LoadAvg) GetFifteenMin() float64 {
	if x != nil {
		return x.FifteenMin
	}
	return 0
}

func (x *LoadAvg) GetProcsRunning() int64 {
	if x != nil {
		return x.ProcsRunning
	}
	return 0
}

func (x *LoadAvg) GetTotalProcs() int64 {
	if x != nil {
		return x.TotalProcs
	}
	return 0
}

type CPU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User   float64 `protobuf:"fixed64,1,opt,name=User,proto3" json:"User,omitempty"`
	System float64 `protobuf:"fixed64,2,opt,name=System,proto3" json:"System,omitempty"`
}

func (x *CPU) Reset() {
	*x = CPU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPU) ProtoMessage() {}

func (x *CPU) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPU.ProtoReflect.Descriptor instead.
func (*CPU) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{1}
}

func (x *CPU) GetUser() float64 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *CPU) GetSystem() float64 {
	if x != nil {
		return x.System
	}
	return 0
}

type FilesystemData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filesystem string `protobuf:"bytes,1,opt,name=Filesystem,proto3" json:"Filesystem,omitempty"`
	Used       int64  `protobuf:"varint,2,opt,name=Used,proto3" json:"Used,omitempty"`
	Inode      int64  `protobuf:"varint,3,opt,name=Inode,proto3" json:"Inode,omitempty"`
}

func (x *FilesystemData) Reset() {
	*x = FilesystemData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilesystemData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesystemData) ProtoMessage() {}

func (x *FilesystemData) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesystemData.ProtoReflect.Descriptor instead.
func (*FilesystemData) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{2}
}

func (x *FilesystemData) GetFilesystem() string {
	if x != nil {
		return x.Filesystem
	}
	return ""
}

func (x *FilesystemData) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *FilesystemData) GetInode() int64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

type DiskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*FilesystemData `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *DiskData) Reset() {
	*x = DiskData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskData) ProtoMessage() {}

func (x *DiskData) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskData.ProtoReflect.Descriptor instead.
func (*DiskData) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{3}
}

func (x *DiskData) GetData() []*FilesystemData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ByProtocol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol   string  `protobuf:"bytes,1,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	Bytes      int64   `protobuf:"varint,2,opt,name=Bytes,proto3" json:"Bytes,omitempty"`
	Percentage float64 `protobuf:"fixed64,3,opt,name=Percentage,proto3" json:"Percentage,omitempty"`
}

func (x *ByProtocol) Reset() {
	*x = ByProtocol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByProtocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByProtocol) ProtoMessage() {}

func (x *ByProtocol) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByProtocol.ProtoReflect.Descriptor instead.
func (*ByProtocol) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{4}
}

func (x *ByProtocol) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ByProtocol) GetBytes() int64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *ByProtocol) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

type ByTraffic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceAddr string `protobuf:"bytes,1,opt,name=SourceAddr,proto3" json:"SourceAddr,omitempty"`
	DestAddr   string `protobuf:"bytes,2,opt,name=DestAddr,proto3" json:"DestAddr,omitempty"`
	Protocol   string `protobuf:"bytes,3,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	Bps        int64  `protobuf:"varint,4,opt,name=Bps,proto3" json:"Bps,omitempty"`
}

func (x *ByTraffic) Reset() {
	*x = ByTraffic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByTraffic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByTraffic) ProtoMessage() {}

func (x *ByTraffic) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByTraffic.ProtoReflect.Descriptor instead.
func (*ByTraffic) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{5}
}

func (x *ByTraffic) GetSourceAddr() string {
	if x != nil {
		return x.SourceAddr
	}
	return ""
}

func (x *ByTraffic) GetDestAddr() string {
	if x != nil {
		return x.DestAddr
	}
	return ""
}

func (x *ByTraffic) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ByTraffic) GetBps() int64 {
	if x != nil {
		return x.Bps
	}
	return 0
}

type TopTalkers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByProtocol []*ByProtocol `protobuf:"bytes,1,rep,name=ByProtocol,proto3" json:"ByProtocol,omitempty"`
	ByTraffic  []*ByTraffic  `protobuf:"bytes,2,rep,name=ByTraffic,proto3" json:"ByTraffic,omitempty"`
}

func (x *TopTalkers) Reset() {
	*x = TopTalkers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopTalkers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopTalkers) ProtoMessage() {}

func (x *TopTalkers) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopTalkers.ProtoReflect.Descriptor instead.
func (*TopTalkers) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{6}
}

func (x *TopTalkers) GetByProtocol() []*ByProtocol {
	if x != nil {
		return x.ByProtocol
	}
	return nil
}

func (x *TopTalkers) GetByTraffic() []*ByTraffic {
	if x != nil {
		return x.ByTraffic
	}
	return nil
}

type Sockets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Program  string `protobuf:"bytes,1,opt,name=Program,proto3" json:"Program,omitempty"`
	PID      int64  `protobuf:"varint,2,opt,name=PID,proto3" json:"PID,omitempty"`
	User     string `protobuf:"bytes,3,opt,name=User,proto3" json:"User,omitempty"`
	Protocol string `protobuf:"bytes,4,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	Port     int64  `protobuf:"varint,5,opt,name=Port,proto3" json:"Port,omitempty"`
}

func (x *Sockets) Reset() {
	*x = Sockets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sockets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sockets) ProtoMessage() {}

func (x *Sockets) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sockets.ProtoReflect.Descriptor instead.
func (*Sockets) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{7}
}

func (x *Sockets) GetProgram() string {
	if x != nil {
		return x.Program
	}
	return ""
}

func (x *Sockets) GetPID() int64 {
	if x != nil {
		return x.PID
	}
	return 0
}

func (x *Sockets) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Sockets) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Sockets) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

type States struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LISTEN     int64 `protobuf:"varint,1,opt,name=LISTEN,proto3" json:"LISTEN,omitempty"`
	ESTAB      int64 `protobuf:"varint,2,opt,name=ESTAB,proto3" json:"ESTAB,omitempty"`
	FIN_WAIT   int64 `protobuf:"varint,3,opt,name=FIN_WAIT,json=FINWAIT,proto3" json:"FIN_WAIT,omitempty"`
	SYN_RCV    int64 `protobuf:"varint,4,opt,name=SYN_RCV,json=SYNRCV,proto3" json:"SYN_RCV,omitempty"`
	TIME_WAIT  int64 `protobuf:"varint,5,opt,name=TIME_WAIT,json=TIMEWAIT,proto3" json:"TIME_WAIT,omitempty"`
	CLOSE_WAIT int64 `protobuf:"varint,6,opt,name=CLOSE_WAIT,json=CLOSEWAIT,proto3" json:"CLOSE_WAIT,omitempty"`
}

func (x *States) Reset() {
	*x = States{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *States) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*States) ProtoMessage() {}

func (x *States) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use States.ProtoReflect.Descriptor instead.
func (*States) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{8}
}

func (x *States) GetLISTEN() int64 {
	if x != nil {
		return x.LISTEN
	}
	return 0
}

func (x *States) GetESTAB() int64 {
	if x != nil {
		return x.ESTAB
	}
	return 0
}

func (x *States) GetFIN_WAIT() int64 {
	if x != nil {
		return x.FIN_WAIT
	}
	return 0
}

func (x *States) GetSYN_RCV() int64 {
	if x != nil {
		return x.SYN_RCV
	}
	return 0
}

func (x *States) GetTIME_WAIT() int64 {
	if x != nil {
		return x.TIME_WAIT
	}
	return 0
}

func (x *States) GetCLOSE_WAIT() int64 {
	if x != nil {
		return x.CLOSE_WAIT
	}
	return 0
}

type NetworkStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenSockets []*Sockets `protobuf:"bytes,1,rep,name=ListenSockets,proto3" json:"ListenSockets,omitempty"`
	TCPConnStates *States    `protobuf:"bytes,2,opt,name=TCPConnStates,proto3" json:"TCPConnStates,omitempty"`
}

func (x *NetworkStats) Reset() {
	*x = NetworkStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStats) ProtoMessage() {}

func (x *NetworkStats) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStats.ProtoReflect.Descriptor instead.
func (*NetworkStats) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{9}
}

func (x *NetworkStats) GetListenSockets() []*Sockets {
	if x != nil {
		return x.ListenSockets
	}
	return nil
}

func (x *NetworkStats) GetTCPConnStates() *States {
	if x != nil {
		return x.TCPConnStates
	}
	return nil
}

type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoadAvg      *LoadAvg      `protobuf:"bytes,1,opt,name=LoadAvg,proto3" json:"LoadAvg,omitempty"`
	CPU          *CPU          `protobuf:"bytes,2,opt,name=CPU,proto3" json:"CPU,omitempty"`
	DiskData     *DiskData     `protobuf:"bytes,3,opt,name=DiskData,proto3" json:"DiskData,omitempty"`
	TopTalkers   *TopTalkers   `protobuf:"bytes,4,opt,name=TopTalkers,proto3" json:"TopTalkers,omitempty"`
	NetworkStats *NetworkStats `protobuf:"bytes,5,opt,name=NetworkStats,proto3" json:"NetworkStats,omitempty"`
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{10}
}

func (x *Stats) GetLoadAvg() *LoadAvg {
	if x != nil {
		return x.LoadAvg
	}
	return nil
}

func (x *Stats) GetCPU() *CPU {
	if x != nil {
		return x.CPU
	}
	return nil
}

func (x *Stats) GetDiskData() *DiskData {
	if x != nil {
		return x.DiskData
	}
	return nil
}

func (x *Stats) GetTopTalkers() *TopTalkers {
	if x != nil {
		return x.TopTalkers
	}
	return nil
}

func (x *Stats) GetNetworkStats() *NetworkStats {
	if x != nil {
		return x.NetworkStats
	}
	return nil
}

type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendInterval    int64 `protobuf:"varint,1,opt,name=SendInterval,proto3" json:"SendInterval,omitempty"`
	AverageInterval int64 `protobuf:"varint,2,opt,name=AverageInterval,proto3" json:"AverageInterval,omitempty"`
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stats_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{11}
}

func (x *ConnectRequest) GetSendInterval() int64 {
	if x != nil {
		return x.SendInterval
	}
	return 0
}

func (x *ConnectRequest) GetAverageInterval() int64 {
	if x != nil {
		return x.AverageInterval
	}
	return 0
}

var File_stats_proto protoreflect.FileDescriptor

var file_stats_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f, 0x01, 0x0a, 0x07, 0x4c,
	0x6f, 0x61, 0x64, 0x41, 0x76, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x46, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x46, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x66, 0x74,
	0x65, 0x65, 0x6e, 0x4d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x46, 0x69,
	0x66, 0x74, 0x65, 0x65, 0x6e, 0x4d, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63,
	0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x50, 0x72, 0x6f, 0x63, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x22, 0x31, 0x0a, 0x03,
	0x43, 0x50, 0x55, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22,
	0x5a, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x55, 0x73, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a, 0x08, 0x44,
	0x69, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x0a,
	0x42, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x75, 0x0a, 0x09,
	0x42, 0x79, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x73,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x73,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x42, 0x70, 0x73, 0x22, 0x63, 0x0a, 0x0a, 0x54, 0x6f, 0x70, 0x54, 0x61, 0x6c, 0x6b, 0x65, 0x72,
	0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x52, 0x0a, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x28,
	0x0a, 0x09, 0x42, 0x79, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x42, 0x79, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x09, 0x42,
	0x79, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x22, 0x79, 0x0a, 0x07, 0x53, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x50, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x50, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50,
	0x6f, 0x72, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x4c, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x4c, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x53, 0x54, 0x41, 0x42, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x45, 0x53, 0x54, 0x41, 0x42, 0x12, 0x19, 0x0a, 0x08,
	0x46, 0x49, 0x4e, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x46, 0x49, 0x4e, 0x57, 0x41, 0x49, 0x54, 0x12, 0x17, 0x0a, 0x07, 0x53, 0x59, 0x4e, 0x5f, 0x52,
	0x43, 0x56, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x59, 0x4e, 0x52, 0x43, 0x56,
	0x12, 0x1b, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x54, 0x49, 0x4d, 0x45, 0x57, 0x41, 0x49, 0x54, 0x12, 0x1d, 0x0a,
	0x0a, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x57, 0x41, 0x49, 0x54, 0x22, 0x6d, 0x0a, 0x0c,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x0d,
	0x54, 0x43, 0x50, 0x43, 0x6f, 0x6e, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0d, 0x54, 0x43,
	0x50, 0x43, 0x6f, 0x6e, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x07, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x67,
	0x52, 0x07, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x67, 0x12, 0x16, 0x0a, 0x03, 0x43, 0x50, 0x55,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x43, 0x50, 0x55, 0x52, 0x03, 0x43, 0x50,
	0x55, 0x12, 0x25, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x44, 0x69, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x0a, 0x54, 0x6f, 0x70, 0x54,
	0x61, 0x6c, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54,
	0x6f, 0x70, 0x54, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x54, 0x6f, 0x70, 0x54, 0x61,
	0x6c, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0c, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x5e, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x28,
	0x0a, 0x0f, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x32, 0x70, 0x0a, 0x08, 0x41, 0x73, 0x74, 0x61,
	0x72, 0x6f, 0x74, 0x68, 0x12, 0x34, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12,
	0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x06,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x00, 0x30, 0x01, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x3b,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stats_proto_rawDescOnce sync.Once
	file_stats_proto_rawDescData = file_stats_proto_rawDesc
)

func file_stats_proto_rawDescGZIP() []byte {
	file_stats_proto_rawDescOnce.Do(func() {
		file_stats_proto_rawDescData = protoimpl.X.CompressGZIP(file_stats_proto_rawDescData)
	})
	return file_stats_proto_rawDescData
}

var file_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_stats_proto_goTypes = []interface{}{
	(*LoadAvg)(nil),        // 0: LoadAvg
	(*CPU)(nil),            // 1: CPU
	(*FilesystemData)(nil), // 2: FilesystemData
	(*DiskData)(nil),       // 3: DiskData
	(*ByProtocol)(nil),     // 4: ByProtocol
	(*ByTraffic)(nil),      // 5: ByTraffic
	(*TopTalkers)(nil),     // 6: TopTalkers
	(*Sockets)(nil),        // 7: Sockets
	(*States)(nil),         // 8: States
	(*NetworkStats)(nil),   // 9: NetworkStats
	(*Stats)(nil),          // 10: Stats
	(*ConnectRequest)(nil), // 11: ConnectRequest
	(*empty.Empty)(nil),    // 12: google.protobuf.Empty
}
var file_stats_proto_depIdxs = []int32{
	2,  // 0: DiskData.Data:type_name -> FilesystemData
	4,  // 1: TopTalkers.ByProtocol:type_name -> ByProtocol
	5,  // 2: TopTalkers.ByTraffic:type_name -> ByTraffic
	7,  // 3: NetworkStats.ListenSockets:type_name -> Sockets
	8,  // 4: NetworkStats.TCPConnStates:type_name -> States
	0,  // 5: Stats.LoadAvg:type_name -> LoadAvg
	1,  // 6: Stats.CPU:type_name -> CPU
	3,  // 7: Stats.DiskData:type_name -> DiskData
	6,  // 8: Stats.TopTalkers:type_name -> TopTalkers
	9,  // 9: Stats.NetworkStats:type_name -> NetworkStats
	11, // 10: Astaroth.Connect:input_type -> ConnectRequest
	12, // 11: Astaroth.GetStats:input_type -> google.protobuf.Empty
	12, // 12: Astaroth.Connect:output_type -> google.protobuf.Empty
	10, // 13: Astaroth.GetStats:output_type -> Stats
	12, // [12:14] is the sub-list for method output_type
	10, // [10:12] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_stats_proto_init() }
func file_stats_proto_init() {
	if File_stats_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stats_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadAvg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stats_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stats_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilesystemData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stats_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stats_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByProtocol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stats_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByTraffic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stats_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopTalkers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stats_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sockets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stats_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*States); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stats_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stats_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stats_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stats_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stats_proto_goTypes,
		DependencyIndexes: file_stats_proto_depIdxs,
		MessageInfos:      file_stats_proto_msgTypes,
	}.Build()
	File_stats_proto = out.File
	file_stats_proto_rawDesc = nil
	file_stats_proto_goTypes = nil
	file_stats_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AstarothClient is the client API for Astaroth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AstarothClient interface {
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Astaroth_GetStatsClient, error)
}

type astarothClient struct {
	cc grpc.ClientConnInterface
}

func NewAstarothClient(cc grpc.ClientConnInterface) AstarothClient {
	return &astarothClient{cc}
}

func (c *astarothClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Astaroth/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *astarothClient) GetStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Astaroth_GetStatsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Astaroth_serviceDesc.Streams[0], "/Astaroth/GetStats", opts...)
	if err != nil {
		return nil, err
	}
	x := &astarothGetStatsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Astaroth_GetStatsClient interface {
	Recv() (*Stats, error)
	grpc.ClientStream
}

type astarothGetStatsClient struct {
	grpc.ClientStream
}

func (x *astarothGetStatsClient) Recv() (*Stats, error) {
	m := new(Stats)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AstarothServer is the server API for Astaroth service.
type AstarothServer interface {
	Connect(context.Context, *ConnectRequest) (*empty.Empty, error)
	GetStats(*empty.Empty, Astaroth_GetStatsServer) error
}

// UnimplementedAstarothServer can be embedded to have forward compatible implementations.
type UnimplementedAstarothServer struct {
}

func (*UnimplementedAstarothServer) Connect(context.Context, *ConnectRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedAstarothServer) GetStats(*empty.Empty, Astaroth_GetStatsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetStats not implemented")
}

func RegisterAstarothServer(s *grpc.Server, srv AstarothServer) {
	s.RegisterService(&_Astaroth_serviceDesc, srv)
}

func _Astaroth_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AstarothServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Astaroth/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AstarothServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Astaroth_GetStats_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AstarothServer).GetStats(m, &astarothGetStatsServer{stream})
}

type Astaroth_GetStatsServer interface {
	Send(*Stats) error
	grpc.ServerStream
}

type astarothGetStatsServer struct {
	grpc.ServerStream
}

func (x *astarothGetStatsServer) Send(m *Stats) error {
	return x.ServerStream.SendMsg(m)
}

var _Astaroth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Astaroth",
	HandlerType: (*AstarothServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _Astaroth_Connect_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetStats",
			Handler:       _Astaroth_GetStats_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "stats.proto",
}
